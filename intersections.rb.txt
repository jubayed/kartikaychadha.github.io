module CsvToJson
    require "time"

    class Generator < Jekyll::Generator


        def nextCehck(site, row)
            min_range = site.config['min_date_range'] + "01".to_i
            max_range = site.config['min_date_range'] + 120
            max_range += "01".to_i

            return if index == 0 

            return true
        end

        def generate_intersections(site, movement_files)


            
            data = Hash.new
            start_date = ''
            movement_files.each do |entry|
                # #csv file data csv
                table = read_csv(site, entry)
                index = 0
                start_date_number = 1
                table.to_a[1..-1].each do | row|
                    row.each do | col |

                        

                        next if nextCehck(site, (table[index])

                        #get valied date // YYYY-MM
                        start_date = getDate(table[index][2]).strftime('%Y-%m') 
                        finish_date = table[index][5] 
                        start_date_to_i = start_date.gsub('-', '')

                        # check finish date
                        if finish_date != ""
                            finish_date = getDate(finish_date).strftime('%Y%m').to_i
                            next if finish_date <= max_range
                        end
                        # check start date
                        next if (max_range > start_date_to_i.to_i
                        next if start_date_to_i.to_i > min_range

                        # get city and country name //city_country
                        begin
                            city_country = table[index][0].to_s.gsub(', ', '_').downcase.gsub(' ', '_')
                        rescue ArgumentError
                            next
                        end
                    
                        # set new index 
                        if data.has_key?(start_date)
                            start_date_number += 1
                        else
                            start_date_number = 0
                            data[start_date] = {}
                            data[start_date][city_country.to_s] = []
                        end

                        begin
                            # oparation start // [YYYY-MM][city_country]
                            data[start_date][city_country.to_s] = {
                                "AuthorID"=> table.headers[1].gsub(' ', ''),
                                "EndCitation"=> table[index][7].to_s,
                                "EndDate"=>  getDate(table[index][6]).strftime('%Y-%m-%d'),
                                "EndType"=> "departure",
                                "EntryIndex"=> index + 1,
                                "Likelihood"=> table[index][7].to_s,
                                "Notes"=> "",
                                "PlaceID"=> table[index][8].to_s,
                                "StartCitation"=> "Arthur A. Schomburg papers, 1724-1938, reel 4--Schomburg Center",
                                "StartDate"=> getDate(table[index][2]).strftime('%Y-%m-%d'),
                                "StartType"=> "earliest_presence"
                            }
                            start_date_number += 1
                            rescue ArgumentError
                            
                        end
                
                    end
                    index+=1
                end

            end
            save(site, 'intersections', pretty_print(data.to_h.to_json))
        #    save(site, 'intersections', pretty_print(data.to_h.to_json))
        end 
    end
end



