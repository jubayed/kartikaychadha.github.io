

module CsvToJsonAuthor
require 'csv'
require 'json'

    class Generator < Jekyll::Generator

        safe true
        priority :low

        # initialize config data
        def initialize(config = {})
            # no-op for default
            @csv_dir = "_csv"
            @data = Hash[]
            @done = false
        end

        def generate(site)

            if @done == false
                    
                base = File.join(site.source, @csv_dir )
                return unless File.directory?(base) && (!site.safe || !File.symlink?(base))

                #movement files
                movement_files = Dir.chdir(base) { Dir['movements/*.csv'] }
                movement_files.delete_if { |e| File.directory?(File.join(base, e)) }

                # generate author

                
                data = Hash.new
                movement_files.each do |entry|
                path = File.join(site.source, @csv_dir, entry)
                next if File.symlink?(path) && site.safe

                #csv file data csv
                file_data = CSV.read(path, :headers => true)
                    #author_values
                    data[ file_data.headers[1].gsub(' ', '') ] = entry.gsub('movements/', '').gsub(' - MAIN.csv', '')
                end

                path = File.join(site.source, '_data', 'author.json')
                File.write(path, pretty_print(data.sort.to_h.to_json))
                puts(" csv to json file:._data/author.json")
                
                @done = true
            end

            
        end

        private
        def pretty_print(json)
            obj = JSON.parse(json)
            JSON.pretty_unparse(obj)
        end     
    end
end


# frozen_string_literal: true
module CsvToJsonAuthor
    VERSION = '1.0.0'
end